gheatmap(p2, gam, offset=17, width=.033,
colnames_angle=90, colnames_offset_y = .25)
gheatmap(p2, gam, offset=20, width=.033,
colnames_angle=90, colnames_offset_y = .25)
gheatmap(p2, gam, offset=25, width=.033,
colnames_angle=90, colnames_offset_y = .25)
gheatmap(p2, gam, offset=30, width=.033,
colnames_angle=90, colnames_offset_y = .25)
gheatmap(p2, gam, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25)
gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p3 <- p2 + new_scale_fill()
gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25)
gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
# Print the plot
print(p1)
library(ggnewscale)
p2 <- p1 + new_scale_fill()
gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p3 <- p2 + new_scale_fill()
gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
str(troph)
troph$`data$troph` = as.numeric(troph$`data$troph`)
troph = as.data.frame(data$troph)
View(data)
library(ape)
tree = read.tree ("D:/re-do_V2/00_dataset_production/output/tree_417.tre")
### Build the dataset with what we want to have on the tree
data = read.csv("D:/Thesis/Supp/summary_data.csv")
data$tot = as.factor(data$tot)
data$repro = as.factor(data$repro)
data$sting = as.factor(data$sting)
data$liq = as.factor(data$liq)
data$colony = as.factor(data$colony)
data$dataset = as.factor(data$dataset)
data$sp = gsub(pattern = " ", replacement = "\\.", data$sp)
row.names(data) = data$sp
data = data[, c(2,3,6:10)]
### Check species names
for(i in 1:nrow(data)){
if(! row.names(data)[i] %in% tree$tip.label){
print(row.names(data)[i])
}
}
### Equalize species names
tree$tip.label = gsub("Aphaenogaster.cockerelli", "Novomessor.cockerelli", tree$tip.label)
### Split the datasets by legend needed
binary = data[,c(1,3,4)]
row.names(binary) = row.names(data)
troph = as.data.frame(data$troph)
troph$`data$troph` = as.numeric(troph$`data$troph`)
row.names(troph) = row.names(data)
gam = as.data.frame(data$repro)
row.names(gam) = row.names(data)
col = as.data.frame(data$colony)
row.names(col) = row.names(data)
dataset = as.data.frame(data$dataset)
row.names(dataset) = row.names(data)
### Plot the circular tree with data on who is expert validated,
library(ggplot2)
library(ggtree)
circ <- ggtree(tree, layout = "fan", open.angle = 30)
circ
#pdf("D:/Thesis/Supp/traits_on_tree.pdf")
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
# Print the plot
print(p1)
library(ggnewscale)
p2 <- p1 + new_scale_fill()
gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p3 <- p2 + new_scale_fill()
gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
View(data)
library(ape)
tree = read.tree ("D:/re-do_V2/00_dataset_production/output/tree_417.tre")
### Build the dataset with what we want to have on the tree
data = read.csv("D:/Thesis/Supp/summary_data.csv")
data$tot = as.factor(data$tot)
data$repro = as.factor(data$repro)
data$sting = as.factor(data$sting)
data$liq = as.factor(data$liq)
data$colony = as.factor(data$colony)
data$dataset = as.factor(data$dataset)
data$sp = gsub(pattern = " ", replacement = "\\.", data$sp)
row.names(data) = data$sp
data = data[, c(2,3,6:10)]
### Check species names
for(i in 1:nrow(data)){
if(! row.names(data)[i] %in% tree$tip.label){
print(row.names(data)[i])
}
}
### Equalize species names
tree$tip.label = gsub("Aphaenogaster.cockerelli", "Novomessor.cockerelli", tree$tip.label)
### Split the datasets by legend needed
binary = data[,c(1,3,4)]
row.names(binary) = row.names(data)
troph = as.data.frame(data$troph)
troph$`data$troph` = as.numeric(troph$`data$troph`)
row.names(troph) = row.names(data)
gam = as.data.frame(data$repro)
row.names(gam) = row.names(data)
col = as.data.frame(data$colony)
row.names(col) = row.names(data)
dataset = as.data.frame(data$dataset)
row.names(dataset) = row.names(data)
### Plot the circular tree with data on who is expert validated,
library(ggplot2)
library(ggtree)
circ <- ggtree(tree, layout = "fan", open.angle = 30)
circ
#pdf("D:/Thesis/Supp/traits_on_tree.pdf")
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
# Print the plot
print(p1)
library(ggnewscale)
p2 <- p1 + new_scale_fill()
gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p3 <- p2 + new_scale_fill()
gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p4 <- p3 + new_scale_fill()
gheatmap(p4, dataset, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p5 <- p4 + new_scale_fill()
gheatmap(p5, col, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
#dev.off()
library(ape)
tree = read.tree ("D:/re-do_V2/00_dataset_production/output/tree_417.tre")
### Build the dataset with what we want to have on the tree
data = read.csv("D:/Thesis/Supp/summary_data.csv")
data$tot = as.factor(data$tot)
data$repro = as.factor(data$repro)
data$sting = as.factor(data$sting)
data$liq = as.factor(data$liq)
data$colony = as.factor(data$colony)
data$dataset = as.factor(data$dataset)
data$sp = gsub(pattern = " ", replacement = "\\.", data$sp)
row.names(data) = data$sp
data = data[, c(2,3,6:10)]
### Check species names
for(i in 1:nrow(data)){
if(! row.names(data)[i] %in% tree$tip.label){
print(row.names(data)[i])
}
}
### Equalize species names
tree$tip.label = gsub("Aphaenogaster.cockerelli", "Novomessor.cockerelli", tree$tip.label)
### Split the datasets by legend needed
binary = data[,c(1,3,4)]
row.names(binary) = row.names(data)
troph = as.data.frame(data$troph)
troph$`data$troph` = as.numeric(troph$`data$troph`)
row.names(troph) = row.names(data)
gam = as.data.frame(data$repro)
row.names(gam) = row.names(data)
col = as.data.frame(data$colony)
row.names(col) = row.names(data)
dataset = as.data.frame(data$dataset)
row.names(dataset) = row.names(data)
### Plot the circular tree with data on who is expert validated,
library(ggplot2)
library(ggtree)
circ <- ggtree(tree, layout = "fan", open.angle = 30)
circ
#pdf("D:/Thesis/Supp/traits_on_tree.pdf")
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
# Print the plot
print(p1)
library(ggnewscale)
p2 <- p1 + new_scale_fill()
gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p3 <- p2 + new_scale_fill()
gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p4 <- p3 + new_scale_fill()
gheatmap(p4, dataset, offset=38, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p5 <- p4 + new_scale_fill()
gheatmap(p5, col, offset=41, width=.033,
colnames_angle=90, colnames_offset_y = .25)
#dev.off()
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
# Print the plot
library(ggnewscale)
p2 <- p1 + new_scale_fill()
gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p3 <- p2 + new_scale_fill()
gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p4 <- p3 + new_scale_fill()
gheatmap(p4, dataset, offset=38, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p5 <- p4 + new_scale_fill()
gheatmap(p5, col, offset=41, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p5
library(ape)
tree = read.tree ("D:/re-do_V2/00_dataset_production/output/tree_417.tre")
### Build the dataset with what we want to have on the tree
data = read.csv("D:/Thesis/Supp/summary_data.csv")
data$tot = as.factor(data$tot)
data$repro = as.factor(data$repro)
data$sting = as.factor(data$sting)
data$liq = as.factor(data$liq)
data$colony = as.factor(data$colony)
data$dataset = as.factor(data$dataset)
data$sp = gsub(pattern = " ", replacement = "\\.", data$sp)
row.names(data) = data$sp
data = data[, c(2,3,6:10)]
### Check species names
for(i in 1:nrow(data)){
if(! row.names(data)[i] %in% tree$tip.label){
print(row.names(data)[i])
}
}
### Equalize species names
tree$tip.label = gsub("Aphaenogaster.cockerelli", "Novomessor.cockerelli", tree$tip.label)
### Split the datasets by legend needed
binary = data[,c(1,3,4)]
row.names(binary) = row.names(data)
troph = as.data.frame(data$troph)
troph$`data$troph` = as.numeric(troph$`data$troph`)
row.names(troph) = row.names(data)
gam = as.data.frame(data$repro)
row.names(gam) = row.names(data)
col = as.data.frame(data$colony)
row.names(col) = row.names(data)
dataset = as.data.frame(data$dataset)
row.names(dataset) = row.names(data)
### Plot the circular tree with data on who is expert validated,
library(ggplot2)
library(ggtree)
circ <- ggtree(tree, layout = "fan", open.angle = 30)
circ
pdf("D:/Thesis/Supp/traits_on_tree.pdf")
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
# Print the plot
library(ggnewscale)
p2 <- p1 + new_scale_fill()
p3 = gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p6 <- p5 + new_scale_fill()
p7 = gheatmap(p6, dataset, offset=38, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p8 <- p7 + new_scale_fill()
p9 = gheatmap(p8, col, offset=41, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p9
p9
str(data)
troph = as.data.frame(data$troph)
row.names(troph) = row.names(data)
library(ape)
tree = read.tree ("D:/re-do_V2/00_dataset_production/output/tree_417.tre")
### Build the dataset with what we want to have on the tree
data = read.csv("D:/Thesis/Supp/summary_data.csv")
data$tot = as.factor(data$tot)
data$repro = as.factor(data$repro)
data$sting = as.factor(data$sting)
data$liq = as.factor(data$liq)
data$colony = as.factor(data$colony)
data$dataset = as.factor(data$dataset)
data$sp = gsub(pattern = " ", replacement = "\\.", data$sp)
row.names(data) = data$sp
data = data[, c(2,3,6:10)]
### Check species names
for(i in 1:nrow(data)){
if(! row.names(data)[i] %in% tree$tip.label){
print(row.names(data)[i])
}
}
### Equalize species names
tree$tip.label = gsub("Aphaenogaster.cockerelli", "Novomessor.cockerelli", tree$tip.label)
### Split the datasets by legend needed
binary = data[,c(1,3,4)]
row.names(binary) = row.names(data)
troph = as.data.frame(data$troph)
row.names(troph) = row.names(data)
gam = as.data.frame(data$repro)
row.names(gam) = row.names(data)
col = as.data.frame(data$colony)
row.names(col) = row.names(data)
dataset = as.data.frame(data$dataset)
row.names(dataset) = row.names(data)
### Plot the circular tree with data on who is expert validated,
library(ggplot2)
library(ggtree)
circ <- ggtree(tree, layout = "fan", open.angle = 30)
circ
pdf("D:/Thesis/Supp/traits_on_tree.pdf")
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
# Print the plot
library(ggnewscale)
p2 <- p1 + new_scale_fill()
p3 = gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p6 <- p5 + new_scale_fill()
p7 = gheatmap(p6, dataset, offset=38, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p8 <- p7 + new_scale_fill()
p9 = gheatmap(p8, col, offset=41, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p9
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
# Print the plot
library(ggnewscale)
p2 <- p1 + new_scale_fill()
p3 = gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p6 <- p5 + new_scale_fill()
p7 = gheatmap(p6, dataset, offset=38, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p7
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
library(ggnewscale)
p2 <- p1 + new_scale_fill()
p3 = gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p6 <- p5 + new_scale_fill()
p7 = gheatmap(p6, dataset, offset=38, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p8 <- p7 + new_scale_fill()
p9 = gheatmap(p8, col, offset=41, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p9
circ <- ggtree(tree, layout = "fan", open.angle = 30)
circ
pdf("D:/Thesis/Supp/traits_on_tree.pdf")
dev.off()
circ <- ggtree(tree, layout = "fan", open.angle = 30)
circ
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
p1
library(ggnewscale)
p2 <- p1 + new_scale_fill()
p3 = gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p3
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p5
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p3, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25)+
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p5
str(troph)
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p4, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p5
p5 = gheatmap(p4, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25)+
scale_fill_viridis_d(option="D", name="discrete\nvalue")
p5
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p4, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25)+
scale_fill_viridis_d(option="D", name="discrete\nvalue")
p5
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p4, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p5
p6 <- p5 + new_scale_fill()
p7 = gheatmap(p6, dataset, offset=38, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p8 <- p7 + new_scale_fill()
p9 = gheatmap(p8, col, offset=41, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p9
library(ape)
tree = read.tree ("D:/re-do_V2/00_dataset_production/output/tree_417.tre")
### Build the dataset with what we want to have on the tree
data = read.csv("D:/Thesis/Supp/summary_data.csv")
data$tot = as.factor(data$tot)
data$repro = as.factor(data$repro)
data$sting = as.factor(data$sting)
data$liq = as.factor(data$liq)
data$colony = as.factor(data$colony)
data$dataset = as.factor(data$dataset)
data$sp = gsub(pattern = " ", replacement = "\\.", data$sp)
row.names(data) = data$sp
data = data[, c(2,3,6:10)]
### Check species names
for(i in 1:nrow(data)){
if(! row.names(data)[i] %in% tree$tip.label){
print(row.names(data)[i])
}
}
### Equalize species names
tree$tip.label = gsub("Aphaenogaster.cockerelli", "Novomessor.cockerelli", tree$tip.label)
### Split the datasets by legend needed
binary = data[,c(1,3,4)]
row.names(binary) = row.names(data)
troph = as.data.frame(data$troph)
row.names(troph) = row.names(data)
gam = as.data.frame(data$repro)
row.names(gam) = row.names(data)
col = as.data.frame(data$colony)
row.names(col) = row.names(data)
dataset = as.data.frame(data$dataset)
row.names(dataset) = row.names(data)
### Plot the circular tree with data on who is expert validated,
library(ggplot2)
library(ggtree)
circ <- ggtree(tree, layout = "fan", open.angle = 30)
circ
pdf("D:/Thesis/Supp/traits_on_tree.pdf")
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
p1
library(ggnewscale)
p2 <- p1 + new_scale_fill()
p3 = gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p3
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p4, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p5
p6 <- p5 + new_scale_fill()
p7 = gheatmap(p6, dataset, offset=38, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p8 <- p7 + new_scale_fill()
p9 = gheatmap(p8, col, offset=41, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p9
dev.off()
library(ggplot2)
library(ggtree)
circ <- ggtree(tree, layout = "fan", open.angle = 30)
circ
pdf("D:/Thesis/Supp/traits_on_tree.pdf")
p1 <- gheatmap(circ, binary, offset = 16, width = 0.1,
colnames_angle = 95, colnames_offset_y = 0.25) +
geom_tiplab(size = 0.2)
library(ggnewscale)
p2 <- p1 + new_scale_fill()
p3 = gheatmap(p2, gam, offset=33, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p4 <- p3 + new_scale_fill()
p5 = gheatmap(p4, troph, offset=35, width=.033,
colnames_angle=90, colnames_offset_y = .25) +
scale_fill_viridis_c(option="A", name="continuous\nvalue")
p6 <- p5 + new_scale_fill()
p7 = gheatmap(p6, dataset, offset=38, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p8 <- p7 + new_scale_fill()
p9 = gheatmap(p8, col, offset=41, width=.033,
colnames_angle=90, colnames_offset_y = .25)
p9
dev.off()
p9
